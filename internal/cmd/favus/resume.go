package favus

import (
	"fmt"

	"github.com/spf13/cobra"
)

// Flags
var (
	resumeFilePath string // status file path generated during an interrupted upload
	resumeBucket   string
	resumeKey      string
	uploadID       string
)

var resumeCmd = &cobra.Command{
	Use:   "resume",
	Short: "Resume an interrupted multipart upload to S3",
	Long: `Resume an S3 multipart upload using a previously created status file.
If some fields are missing, they are taken from config/ENV, then prompted as needed.`,
	Example: `
  favus resume --file ./upload.status
  favus resume --file ./upload.status -c config.yaml`,
	RunE: runResume,
}

func runResume(_ *cobra.Command, _ []string) error {
	// Validate status file presence first
	if err := ValidateFile(resumeFilePath); err != nil {
		return fmt.Errorf("status file validation failed: %w", err)
	}

	// Load and validate config
	conf, err := LoadConfigWithOverrides(resumeBucket, resumeKey, "")
	if err != nil {
		return err
	}

	// Apply uploadID override
	if uploadID != "" {
		conf.UploadID = uploadID
	}

	// Prompt for missing required fields
	validator := NewConfigValidator(conf).RequireBucket().RequireKey()
	PromptForMissingConfig(validator)

	// Prompt for UploadID if still missing (may come from status file)
	if conf.UploadID == "" {
		conf.UploadID = PromptInput("üîÅ Enter Upload ID")
	}

	// Create uploader and resume upload
	up, err := CreateUploaderWithAWS(conf)
	if err != nil {
		return err
	}

	if err := up.ResumeUpload(resumeFilePath); err != nil {
		return fmt.Errorf("resume failed: %w", err)
	}

	fmt.Println("‚úÖ Resume completed")
	return nil
}

func init() {
	rootCmd.AddCommand(resumeCmd)

	resumeCmd.Flags().StringVarP(&resumeFilePath, "file", "f", "", "Path to status file generated by previous run (required)")
	resumeCmd.Flags().StringVarP(&resumeBucket, "bucket", "b", "", "S3 bucket name (overrides config/ENV)")
	resumeCmd.Flags().StringVarP(&resumeKey, "key", "k", "", "S3 object key (overrides config/ENV)")
	resumeCmd.Flags().StringVarP(&uploadID, "upload-id", "u", "", "Upload ID (overrides config/ENV)")

	_ = resumeCmd.MarkFlagRequired("file")
}
